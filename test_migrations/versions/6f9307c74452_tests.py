"""tests

Revision ID: 6f9307c74452
Revises:
Create Date: 2025-05-01 00:03:37.716957

"""

import os

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "6f9307c74452"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table_schema("STG_ACHIEVEMENT")
    op.create_table(
        "achievement",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("picture", sa.String(), nullable=True),
        sa.Column("owner_user_id", sa.Integer(), nullable=True),
        sa.Column("create_ts", sa.DateTime(), nullable=True),
        sa.Column("update_ts", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        schema="STG_ACHIEVEMENT",
        info={"sensitive": False},
    )
    op.create_table(
        "achievement_reciever",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("achievement_id", sa.Integer(), nullable=True),
        sa.Column("create_ts", sa.DateTime(), nullable=True),
        sa.Column("update_ts", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        schema="STG_ACHIEVEMENT",
        info={"sensitive": False},
    )
    op.create_group(
        "test_dwh_stg_achievement_read"
        if os.getenv("ENVIRONMENT") != "production"
        else "prod_dwh_stg_achievement_read"
    )
    op.create_group(
        "test_dwh_stg_achievement_write"
        if os.getenv("ENVIRONMENT") != "production"
        else "prod_dwh_stg_achievement_write"
    )
    op.create_group(
        "test_dwh_stg_achievement_all"
        if os.getenv("ENVIRONMENT") != "production"
        else "prod_dwh_stg_achievement_all"
    )
    op.grant_on_schema(
        (
            "test_dwh_stg_achievement_read"
            if os.getenv("ENVIRONMENT") != "production"
            else "prod_dwh_stg_achievement_read"
        ),
        "STG_ACHIEVEMENT",
    )
    op.grant_on_schema(
        (
            "test_dwh_stg_achievement_write"
            if os.getenv("ENVIRONMENT") != "production"
            else "prod_dwh_stg_achievement_write"
        ),
        "STG_ACHIEVEMENT",
    )
    op.grant_on_schema(
        (
            "test_dwh_stg_achievement_all"
            if os.getenv("ENVIRONMENT") != "production"
            else "prod_dwh_stg_achievement_all"
        ),
        "STG_ACHIEVEMENT",
    )
    op.grant_on_table(
        (
            "test_dwh_stg_achievement_read"
            if os.getenv("ENVIRONMENT") != "production"
            else "prod_dwh_stg_achievement_read"
        ),
        ["SELECT"],
        '"STG_ACHIEVEMENT".achievement_reciever',
    )
    op.grant_on_table(
        (
            "test_dwh_stg_achievement_write"
            if os.getenv("ENVIRONMENT") != "production"
            else "prod_dwh_stg_achievement_write"
        ),
        ["SELECT", "UPDATE", "DELETE", "TRUNCATE", "INSERT"],
        '"STG_ACHIEVEMENT".achievement_reciever',
    )
    op.grant_on_table(
        (
            "test_dwh_stg_achievement_all"
            if os.getenv("ENVIRONMENT") != "production"
            else "prod_dwh_stg_achievement_all"
        ),
        ["ALL"],
        '"STG_ACHIEVEMENT".achievement_reciever',
    )
    op.grant_on_table(
        (
            "test_dwh_stg_achievement_read"
            if os.getenv("ENVIRONMENT") != "production"
            else "prod_dwh_stg_achievement_read"
        ),
        ["SELECT"],
        '"STG_ACHIEVEMENT".achievement',
    )
    op.grant_on_table(
        (
            "test_dwh_stg_achievement_write"
            if os.getenv("ENVIRONMENT") != "production"
            else "prod_dwh_stg_achievement_write"
        ),
        ["SELECT", "UPDATE", "DELETE", "TRUNCATE", "INSERT"],
        '"STG_ACHIEVEMENT".achievement',
    )
    op.grant_on_table(
        (
            "test_dwh_stg_achievement_all"
            if os.getenv("ENVIRONMENT") != "production"
            else "prod_dwh_stg_achievement_all"
        ),
        ["ALL"],
        '"STG_ACHIEVEMENT".achievement',
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.revoke_on_table(
        (
            "test_dwh_stg_achievement_all"
            if os.getenv("ENVIRONMENT") != "production"
            else "prod_dwh_stg_achievement_all"
        ),
        ["ALL"],
        '"STG_ACHIEVEMENT".achievement',
    )
    op.revoke_on_table(
        (
            "test_dwh_stg_achievement_write"
            if os.getenv("ENVIRONMENT") != "production"
            else "prod_dwh_stg_achievement_write"
        ),
        ["SELECT", "UPDATE", "DELETE", "TRUNCATE", "INSERT"],
        '"STG_ACHIEVEMENT".achievement',
    )
    op.revoke_on_table(
        (
            "test_dwh_stg_achievement_read"
            if os.getenv("ENVIRONMENT") != "production"
            else "prod_dwh_stg_achievement_read"
        ),
        ["SELECT"],
        '"STG_ACHIEVEMENT".achievement',
    )
    op.revoke_on_table(
        (
            "test_dwh_stg_achievement_all"
            if os.getenv("ENVIRONMENT") != "production"
            else "prod_dwh_stg_achievement_all"
        ),
        ["ALL"],
        '"STG_ACHIEVEMENT".achievement_reciever',
    )
    op.revoke_on_table(
        (
            "test_dwh_stg_achievement_write"
            if os.getenv("ENVIRONMENT") != "production"
            else "prod_dwh_stg_achievement_write"
        ),
        ["SELECT", "UPDATE", "DELETE", "TRUNCATE", "INSERT"],
        '"STG_ACHIEVEMENT".achievement_reciever',
    )
    op.revoke_on_table(
        (
            "test_dwh_stg_achievement_read"
            if os.getenv("ENVIRONMENT") != "production"
            else "prod_dwh_stg_achievement_read"
        ),
        ["SELECT"],
        '"STG_ACHIEVEMENT".achievement_reciever',
    )
    op.revoke_on_schema(
        (
            "test_dwh_stg_achievement_all"
            if os.getenv("ENVIRONMENT") != "production"
            else "prod_dwh_stg_achievement_all"
        ),
        "STG_ACHIEVEMENT",
    )
    op.revoke_on_schema(
        (
            "test_dwh_stg_achievement_write"
            if os.getenv("ENVIRONMENT") != "production"
            else "prod_dwh_stg_achievement_write"
        ),
        "STG_ACHIEVEMENT",
    )
    op.revoke_on_schema(
        (
            "test_dwh_stg_achievement_read"
            if os.getenv("ENVIRONMENT") != "production"
            else "prod_dwh_stg_achievement_read"
        ),
        "STG_ACHIEVEMENT",
    )
    op.drop_table("achievement_reciever", schema="STG_ACHIEVEMENT")
    op.drop_table("achievement", schema="STG_ACHIEVEMENT")
    op.delete_group(
        "test_dwh_stg_achievement_all"
        if os.getenv("ENVIRONMENT") != "production"
        else "prod_dwh_stg_achievement_all"
    )
    op.delete_group(
        "test_dwh_stg_achievement_write"
        if os.getenv("ENVIRONMENT") != "production"
        else "prod_dwh_stg_achievement_write"
    )
    op.delete_group(
        "test_dwh_stg_achievement_read"
        if os.getenv("ENVIRONMENT") != "production"
        else "prod_dwh_stg_achievement_read"
    )
    op.drop_table_schema("STG_ACHIEVEMENT")
    # ### end Alembic commands ###
